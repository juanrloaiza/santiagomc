---
import {
    getLangFromUrl,
    useCountryTranslations,
    useTranslations,
} from "../i18n/utils";
import { getRelativeLocaleUrl } from "astro:i18n";

import type { CollectionEntry } from "astro:content";
import EventTypeTag from "./EventTypeTag.astro";
type EventData = CollectionEntry<"events">["data"];

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translateCountry = useCountryTranslations(lang);

interface Props {
    id: string;
    data: EventData;
}

const event = Astro.props;
---

<a
    class="mb-4 block"
    href={getRelativeLocaleUrl(lang, `events/${event.id}`)}
>
    <EventTypeTag>
        {t(event.data.eventType)}
    </EventTypeTag>
    <h3 class="text-xl -mt-[3pt]">
        {event.data.title}
    </h3>
    {event.data.author}
    {
        event.data.affiliation && event.data.country
            ? `(${event.data.affiliation}, ${translateCountry(event.data.country) || event.data.country})`
            : ""
    }
    <div class="text-sm">
        {event.data.dates[0].date}
        {
            event.data.dates.length > 1 &&
                ` - ${event.data.dates[event.data.dates.length - 1].date}`
        }
    </div>
</a>
