---
import { getCollection } from "astro:content";
import { languages } from "../../i18n/ui";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getLangFromUrl, useTranslations } from "../../i18n/utils";
import { getEntry } from "astro:content";
import { marked } from "marked";

export async function getStaticPaths() {
    return Object.keys(languages).map((lang) => {
        return { params: { lang }, props: lang };
    });
}

const groups = (await getCollection("readingGroups")).sort(
    (a, b) =>
        new Date(b.data.startDate).getTime() -
        new Date(a.data.startDate).getTime(),
);
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const activeGroup = await getEntry("readingGroups", "2025-ii_bias");

const renderedReadings = activeGroup?.data.calendar?.map((r) => {
    return {
        date: r.date,
        reading: marked.parseInline(r.reading),
    };
});
---

<BaseLayout title={t("nav.reading-group")}>
    <div class="my-6">
        <div class="text-4xl">{activeGroup?.data.title}</div>
        <div class="text-2xl mt-1">{activeGroup?.data.author}</div>
    </div>

    <div class="lg:flex gap-x-8">
        {
            activeGroup?.data.img && (
                <img
                    class="max-w-xs lg:max-w-2/10 max-h-100"
                    src={activeGroup?.data.img}
                />
            )
        }
        {
            activeGroup?.data.abstract && (
                <div class="my-4 lg:w-5/10">
                    <>
                        <strong>Abstract</strong>
                        <br />
                    </>
                    {activeGroup?.data.abstract}
                </div>
            )
        }
        <div class={activeGroup?.data.img ? "lg:w-3/10" : ""}>
            <div class="flex flex-col gap-y-2">
                <div>
                    <strong>Fecha de inicio</strong>
                    <br />
                    {activeGroup?.data.startDate}
                </div>
                <div>
                    <strong>Fecha de finalizaci√≥n </strong><br />
                    {activeGroup?.data.endDate}
                </div>
                <div>
                    <strong>Horario</strong>
                    <br /> Jueves {activeGroup?.data.time}
                </div>
                <div>
                    <strong>Lugar</strong>
                    <br />
                    {activeGroup?.data.place}
                </div>
                <div class="">
                    <strong>Calendario</strong>
                    <div class="lg:grid grid-cols-12">
                        {
                            renderedReadings?.map((session) => (
                                
                                    <div>{session.date} </div>
                                    <div class="col-span-11 mb-4">
                                        <span set:html={session.reading} />
                                    </div>
                                
                            ))
                        }
                    </div>
                    <!-- <span class="text-gray-500 italic">
                        {
                            activeGroup?.data.pendingDates
                                ? "Fechas por definir"
                                : ""
                        }
                    </span> -->
                </div>
            </div>
        </div>
    </div>

    <div class="text-center mt-10">
        <h3 class="text-3xl my-4">
            {t("RG.previousgroups")}
            <div class="flex flex-wrap gap-4 justify-center my-6">
                {
                    groups.map((group) => {
                        if (!group.data.isActive) {
                            return (
                                <img
                                    class="w-40"
                                    src={group.data.img}
                                    alt={group.data.title}
                                />
                            );
                        }
                    })
                }
            </div>
        </h3>
    </div>
</BaseLayout>
