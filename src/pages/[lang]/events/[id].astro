---
import { getCollection, getEntry } from "astro:content";
import { languages } from "../../../i18n/ui";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import {
  getLangFromUrl,
  useTranslations,
  useCountryTranslations,
} from "../../../i18n/utils";
import { render } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";

export async function getStaticPaths() {
  const events = await getCollection("events");

  return Object.keys(languages).flatMap((lang) => {
    return events.flatMap((event) => {
      return { params: { lang, id: event.id }, props: event };
    });
  });
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translateCountry = useCountryTranslations(lang);

const event = Astro.props;
const { Content } = await render(event);

const project = event.data.project
  ? await getEntry(event.data.project)
  : undefined;

const fullPageTitle = `${event.data.author ? event.data.author + ": " : ""} ${event.data.title} Â· ${t("nav.events")}`;
const country = event.data.country ? translateCountry(event.data.country) : "";
const SEODescription =
  event.data.description ||
  `Invitamos a la charla de ${event.data.author} (${event.data.affiliation}, ${country}) el ${event.data.startDate}.`;
---

<BaseLayout
  title={t("nav.events")}
  section="events"
  SEOTitle={fullPageTitle}
  SEODescription={SEODescription}
>
  <span class="text-base text-gray-600">
    {t(event.data.eventType)}
  </span>
  <h2 class="text-3xl mb-1">{event.data.title}</h2>
  <div class="text-xl">
    {event.data.author}
    {
      event.data.affiliation && event.data.country
        ? `(${event.data.affiliation}, ${translateCountry(event.data.country) || event.data.country})`
        : event.data.affiliation
          ? event.data.affiliation
          : ""
    }
  </div>
  <div class="mt-4 lg:flex gap-x-6 event">
    <div class="lg:w-7/10">
      <Content />
    </div>
    <div class="lg:w-3/10 flex flex-col gap-y-2">
      <div>
        <strong>Fecha</strong><br />
        {event.data.startDate}
        {event.data.endDate && ` - ${event.data.endDate}`}
      </div>
      <div>
        <strong>Hora</strong><br />
        {event.data.startTime}{
          event.data.endTime ? ` - ${event.data.endTime}` : ""
        }
      </div>
      <div>
        <strong>Lugar</strong><br />
        {event.data.place}
      </div>

      {
        project && (
          <div>
            <>
              <strong>Proyecto</strong>
              <br />
            </>
            <a href={getRelativeLocaleUrl(lang, `projects/${project.id}`)}>
              {project.data.mainResearcher}: <em>{project.data.title[lang]}</em>
            </a>
          </div>
        )
      }
    </div>
  </div>
</BaseLayout>

<style>
  .event {
    h3 {
      font-size: var(--text-2xl);
      margin-top: 1.5rem;
      margin-bottom: 0.75rem;
    }

    h4 {
      font-weight: 600;
      margin-top: 1.5rem;
      font-size: 110%;
    }
    .youtube-iframe {
      position: relative;
      width: 100%;
      overflow: hidden;
      padding-bottom: 56.25%;
    }
    .youtube-iframe iframe {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    ul {
      list-style: disc;
    }

    ul,
    ol {
      padding-left: 1.5rem;
      margin-bottom: 1rem;
    }
  }
</style>
