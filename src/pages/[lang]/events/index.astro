---
import { getCollection } from "astro:content";
import { languages } from "../../../i18n/ui";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { getLangFromUrl, useCountryTranslations, useTranslations } from "../../../i18n/utils";
import { getRelativeLocaleUrl } from "astro:i18n";

export async function getStaticPaths() {
    return Object.keys(languages).map((lang) => {
        return { params: { lang }, props: lang };
    });
}

function parseDDMMYYYY(dateStr: string) {
  const match = /^(\d{2})\.(\d{2})\.(\d{4})$/.exec(dateStr);
  if (!match) return new Date(3000, 1, 1);


  const [_, day, month, year] = match;
  return new Date(Number(year), Number(month) - 1, Number(day));
}

const members = (await getCollection("events")).sort((a, b) => {
    
    const yearA = parseDDMMYYYY(a.data.startDate).getFullYear()
    const yearB = parseDDMMYYYY(b.data.startDate).getFullYear()

    return yearB - yearA
});

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translateCountry = useCountryTranslations(lang);
---

<BaseLayout title={t("nav.events")}>
    <div class="lg:grid grid-cols-12 items-baseline gap-y-4">
        {
            members.map((member) => {
                return (
          
                        <div class="">{member.data.startDate}</div>
                        <div class="col-span-11 mb-4 lg:mb-0">
                            <a
                                href={getRelativeLocaleUrl(
                                    lang,
                                    `events/${member.id}`,
                                )}
                            >
                                <h2 class="text-xl">{member.data.title}</h2>
                                {member.data.author}
                                {member.data.affiliation && member.data.country
                                    ? `(${member.data.affiliation}, ${translateCountry(member.data.country) || member.data.country})`
                                    : ""}
                            </a>
                        </div>
           
                );
            })
        }
    </div>
</BaseLayout>
