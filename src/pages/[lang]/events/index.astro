---
import { getCollection } from "astro:content";
import { languages } from "../../../i18n/ui";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import {
    getLangFromUrl,
    parseDDMMYYYY,
    sortByYear,
    useTranslations,
} from "../../../i18n/utils";
import EventsList from "../../../components/EventsList.astro";

export async function getStaticPaths() {
    return Object.keys(languages).map((lang) => {
        return { params: { lang }, props: lang };
    });
}

const events = (await getCollection("events")).sort(sortByYear);

const today = new Date();

const upcomingEvents = events
    .filter((e) => parseDDMMYYYY(e.data.dates[0].date) >= today)
    .reverse();
const pastEvents = events.filter(
    (e) => parseDDMMYYYY(e.data.dates[0].date) < today,
);

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<BaseLayout title={t("nav.events")}>
    <h2 class="text-3xl mb-2">{t("upcoming events")}</h2>
    <div class="mb-8">
        {
            upcomingEvents.map((event) => {
                return <EventsList id={event.id} data={event.data} />;
            })
        }
    </div>

    <h2 class="text-3xl mb-2">{t("past events")}</h2>
    <div class="mb-6">
        {
            pastEvents.map((event) => {
                return <EventsList id={event.id} data={event.data} />;
            })
        }
    </div>
</BaseLayout>
