---
import { getCollection } from "astro:content";
import { languages } from "../../../i18n/ui";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import {
  getLangFromUrl,
  sortByYear,
  useTranslations,
} from "../../../i18n/utils";
import { SEO } from "astro-seo";
import { marked } from "marked";
import { getEntries } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";
import EventTypeTag from "../../../components/EventTypeTag.astro";

export async function getStaticPaths() {
  const projects = await getCollection("projects");

  return Object.keys(languages).flatMap((lang) => {
    return projects.flatMap((project) => {
      return { params: { lang, id: project.id }, props: project };
    });
  });
}

const project = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const events = project.data.events
  ? (await getEntries(project.data.events)).sort(sortByYear)
  : [];

const renderedAbstract = marked.parse(
  project.data.abstract[lang] || project.data.abstract.es,
);

const truncatedAbstract = (): string => {
  const maxLength = 800;
  if (project.data.abstract.es.length > maxLength) {
    return project.data.abstract.es.substring(0, maxLength) + "...";
  }
  return project.data.abstract.es;
};
---

<SEO
  openGraph={{
    basic: {
      title: project.data.title[lang],
      image:
        "https://unsplash.com/photos/9A9TcXEsy6c/download?ixid=M3wxMjA3fDB8MXxhbGx8fHx8fHx8fHwxNzQ3MTg2NDM5fA&force=true&w=640",
      type: "website",
    },
  }}
  description={truncatedAbstract()}
/>

<BaseLayout title={t("nav.projects")}>
  <h2 class="text-3xl mb-6">{project.data.title[lang]}</h2>
  <div class="">
    <strong>{t("PI-full")}: </strong>
    {project.data.mainResearcher}
    {
      project.data.coresearcher && (
        <>
          <br />
          <strong>{t("coresearcher")}: </strong>
          {project.data.coresearcher}
        </>
      )
    }

    <div class="mt-4 lg:flex gap-x-6">
      <div class="lg:w-7/10">
        <div set:html={renderedAbstract} />
        <div>
          <h3 class="text-xl mt-6">{t("Oportunidades")}</h3>
          <p class="italic">
            El proyecto contempla incorporar a asistentes de investigación y a
            tesistas de posgrado que cursen sus estudios en la UAH y trabajen
            sobre temas vinculados con el proyecto. Revisa esta página y
            nuestras redes sociales para enterarte de las convocatorias futuras.
          </p>
        </div>
      </div>

      <div class="lg:w-3/10 flex flex-col gap-y-2 mt-6 lg:mt-0">
        <div>
          <strong>{t("duration")}</strong><br />
          {project.data.startYear} - {project.data.endYear}
        </div>

        <div>
          <strong>{t("funding")}</strong><br />
          {project.data.funding}
          {project.data.number && `(${project.data.number})`}
        </div>

        <div>
          <strong>{t("associated events")}</strong><br />
          {
            events.length > 0 ? (
              events.map((event) => (
                <a
                  class="block mb-4"
                  href={getRelativeLocaleUrl(lang, `events/${event.id}`)}
                >
                  <EventTypeTag>{t(event.data.eventType)}</EventTypeTag>
                  {event.data.author ? `${event.data.author}: ` : ""}
                  {event.data.title}

                  <div class="text-sm">
                    {event.data.dates.length == 1
                      ? event.data.dates[0].date
                      : `${event.data.dates[0].date} - ${event.data.dates[event.data.dates.length - 1].date}`}
                  </div>
                </a>
              ))
            ) : (
              <em>Eventos por anunciar</em>
            )
          }
        </div>
      </div>
    </div>
  </div>
</BaseLayout>
